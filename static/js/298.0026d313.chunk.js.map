{"version":3,"file":"static/js/298.0026d313.chunk.js","mappings":"iOAOaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6JAUzBC,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAmBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+KAY3BI,EAAYP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uDAKxBM,GAAeT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAmBW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sEAMlCS,EAAcZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,8UAoB3BW,EAAYd,EAAAA,GAAAA,KAAWe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kH,wCC/C9Ba,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,kBACNC,IAAI,EAAG,4CACPC,IAAI,GAAI,kBACRC,SAAS,sBACZC,SAAUN,EAAAA,KACPG,IAAI,EAAG,+CACPC,IAAI,GAAI,qBACRC,SAAS,2BAGDE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbV,MAAO,GACPI,SAAU,IAEZP,iBAAkBA,EAClBc,SAAU,SAACC,EAAQC,GACjBA,EAAQC,YACRR,GAASS,EAAAA,EAAAA,IAAMH,GACjB,EAAEI,UAEFC,EAAAA,EAAAA,MAACrC,EAAI,CAAAoC,SAAA,EACHC,EAAAA,EAAAA,MAAC7B,EAAS,CAAA4B,SAAA,EACRR,EAAAA,EAAAA,KAACb,EAAS,CAAAqB,SAAC,WACXR,EAAAA,EAAAA,KAACvB,EAAK,CAACiC,KAAK,QAAQC,KAAK,QAAQC,YAAY,0BAC7CZ,EAAAA,EAAAA,KAAClB,EAAY,CAAC4B,KAAK,QAAQG,UAAU,OAAOlB,UAAQ,QAGtDc,EAAAA,EAAAA,MAAC7B,EAAS,CAAA4B,SAAA,EACRR,EAAAA,EAAAA,KAACb,EAAS,CAAAqB,SAAC,cACXR,EAAAA,EAAAA,KAACvB,EAAK,CAACiC,KAAK,WAAWC,KAAK,cAC5BX,EAAAA,EAAAA,KAAClB,EAAY,CAAC4B,KAAK,WAAWG,UAAU,OAAOlB,UAAQ,QAGzDK,EAAAA,EAAAA,KAACf,EAAW,CAAC0B,KAAK,SAAQH,SAAC,eAInC,EClDA,EAJkB,WAChB,OAAOR,EAAAA,EAAAA,KAACH,EAAS,GACnB,C","sources":["components/LoginForm-component/LoginForm.styled.js","components/LoginForm-component/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n  max-width: 550px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-top: 80px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 12px;\n  font-size: inherit;\n  border-radius: 25px;\n  border: 1px solid #bdbdbd;\n  outline: none;\n\n  &:focus {\n    border: 1px solid #0047ab;\n  }\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  margin-top: 10px;\n  font-size: 14px;\n  color: #fc0335;\n`;\n\nexport const LogInButton = styled.button`\n  width: 200px;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.5;\n  border-radius: 25px;\n  background-color: #fff;\n  border: 2px solid #0047ab;\n  color: #0047ab;\n  padding: 10px;\n  margin-right: auto;\n  margin-left: auto;\n\n  &:hover,\n  &:focus {\n    background-color: #0047ab;\n    color: #fff;\n  }\n`;\n\nexport const LabelText = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.5;\n  margin-bottom: 5px;\n  color: #0047ab;\n`;\n","import { Formik } from 'formik';\nimport {\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  LogInButton,\n  LabelText,\n} from './LoginForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email!')\n    .min(8, 'Email must contain at least 8 characters')\n    .max(40, 'Too long email')\n    .required('Email is required!'),\n  password: Yup.string()\n    .min(8, 'Password must contain at least 8 characters')\n    .max(40, 'Too long password')\n    .required('Password is required!'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        actions.resetForm();\n        dispatch(logIn(values));\n      }}\n    >\n      <Form>\n        <FormGroup>\n          <LabelText>Email</LabelText>\n          <Field name=\"email\" type=\"email\" placeholder=\"katesimpson@mail.com\" />\n          <ErrorMessage name=\"email\" component=\"span\" required />\n        </FormGroup>\n\n        <FormGroup>\n          <LabelText>Password</LabelText>\n          <Field name=\"password\" type=\"password\" />\n          <ErrorMessage name=\"password\" component=\"span\" required />\n        </FormGroup>\n\n        <LogInButton type=\"submit\">Log in</LogInButton>\n      </Form>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm-component/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","FormGroup","_templateObject3","ErrorMessage","FormikError","_templateObject4","LogInButton","_templateObject5","LabelText","_templateObject6","validationSchema","Yup","shape","email","min","max","required","password","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","actions","resetForm","logIn","children","_jsxs","name","type","placeholder","component"],"sourceRoot":""}