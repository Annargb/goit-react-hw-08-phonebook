{"version":3,"file":"static/js/335.ad27a768.chunk.js","mappings":"iOAOaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6JAUzBC,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAmBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+KAY3BI,EAAYP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uDAKxBM,GAAeT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAmBW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sEAMlCS,EAAiBZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,8UAoB9BW,EAAYd,EAAAA,GAAAA,KAAWe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kH,wCC/C9Ba,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KACHG,IAAI,EAAG,2CACPC,IAAI,GAAI,iBACRC,SAAS,qBACZC,MAAON,EAAAA,KACJM,MAAM,kBACNH,IAAI,EAAG,4CACPC,IAAI,GAAI,kBACRC,SAAS,sBACZE,SAAUP,EAAAA,KACPG,IAAI,EAAG,+CACPC,IAAI,GAAI,qBACRC,SAAS,2BAGDG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbX,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZR,iBAAkBA,EAClBe,SAbiB,SAACC,EAAQC,GAC5BP,GAASQ,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAU2BC,UAEvBC,EAAAA,EAAAA,MAACtC,EAAI,CAAAqC,SAAA,EACHC,EAAAA,EAAAA,MAAC9B,EAAS,CAAA6B,SAAA,EACRR,EAAAA,EAAAA,KAACd,EAAS,CAAAsB,SAAC,UACXR,EAAAA,EAAAA,KAACxB,EAAK,CAACe,KAAK,OAAOmB,KAAK,OAAOC,YAAY,kBAC3CX,EAAAA,EAAAA,KAACnB,EAAY,CAACU,KAAK,OAAOqB,UAAU,OAAOlB,UAAQ,QAGrDe,EAAAA,EAAAA,MAAC9B,EAAS,CAAA6B,SAAA,EACRR,EAAAA,EAAAA,KAACd,EAAS,CAAAsB,SAAC,WACXR,EAAAA,EAAAA,KAACxB,EAAK,CAACe,KAAK,QAAQmB,KAAK,QAAQC,YAAY,0BAC7CX,EAAAA,EAAAA,KAACnB,EAAY,CAACU,KAAK,QAAQqB,UAAU,OAAOlB,UAAQ,QAGtDe,EAAAA,EAAAA,MAAC9B,EAAS,CAAA6B,SAAA,EACRR,EAAAA,EAAAA,KAACd,EAAS,CAAAsB,SAAC,cACXR,EAAAA,EAAAA,KAACxB,EAAK,CAACe,KAAK,WAAWmB,KAAK,cAC5BV,EAAAA,EAAAA,KAACnB,EAAY,CAACU,KAAK,WAAWqB,UAAU,OAAOlB,UAAQ,QAGzDM,EAAAA,EAAAA,KAAChB,EAAc,CAAC0B,KAAK,SAAQF,SAAC,gBAItC,EChEA,EAJqB,WACnB,OAAOR,EAAAA,EAAAA,KAACH,EAAY,GACtB,C","sources":["components/RegisterForm-component/RegisterForm.styled.js","components/RegisterForm-component/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n  max-width: 550px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-top: 80px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 12px;\n  font-size: inherit;\n  border-radius: 25px;\n  border: 1px solid #bdbdbd;\n  outline: none;\n\n  &:focus {\n    border: 1px solid #0047ab;\n  }\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  margin-top: 10px;\n  font-size: 14px;\n  color: #fc0335;\n`;\n\nexport const RegisterButton = styled.button`\n  width: 200px;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.5;\n  border-radius: 25px;\n  background-color: #fff;\n  border: 2px solid #0047ab;\n  color: #0047ab;\n  padding: 10px;\n  margin-right: auto;\n  margin-left: auto;\n\n  &:hover,\n  &:focus {\n    background-color: #0047ab;\n    color: #fff;\n  }\n`;\n\nexport const LabelText = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.5;\n  margin-bottom: 5px;\n  color: #0047ab;\n`;\n","import { Formik } from 'formik';\nimport {\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  RegisterButton,\n  LabelText,\n} from './RegisterForm.styled';\nimport * as Yup from 'yup';\nimport { register } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name must contain at least 2 characters')\n    .max(40, 'Too long name')\n    .required('Name is required!'),\n  email: Yup.string()\n    .email('Invalid email!')\n    .min(8, 'Email must contain at least 8 characters')\n    .max(40, 'Too long email')\n    .required('Email is required!'),\n  password: Yup.string()\n    .min(8, 'Password must contain at least 8 characters')\n    .max(40, 'Too long password')\n    .required('Password is required!'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(register(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormGroup>\n          <LabelText>Name</LabelText>\n          <Field name=\"name\" type=\"text\" placeholder=\"Kate Simpson\" />\n          <ErrorMessage name=\"name\" component=\"span\" required />\n        </FormGroup>\n\n        <FormGroup>\n          <LabelText>Email</LabelText>\n          <Field name=\"email\" type=\"email\" placeholder=\"katesimpson@mail.com\" />\n          <ErrorMessage name=\"email\" component=\"span\" required />\n        </FormGroup>\n\n        <FormGroup>\n          <LabelText>Password</LabelText>\n          <Field name=\"password\" type=\"password\" />\n          <ErrorMessage name=\"password\" component=\"span\" required />\n        </FormGroup>\n\n        <RegisterButton type=\"submit\">Sign up</RegisterButton>\n      </Form>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm-component/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","FormGroup","_templateObject3","ErrorMessage","FormikError","_templateObject4","RegisterButton","_templateObject5","LabelText","_templateObject6","validationSchema","Yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","actions","register","resetForm","children","_jsxs","type","placeholder","component"],"sourceRoot":""}